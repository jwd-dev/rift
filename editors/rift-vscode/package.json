{
  "name": "rift-vscode",
  "displayName": "Rift",
  "description": "Rift: an AI-native language server for your personal AI software engineer.",
  "version": "0.0.8",
  "icon": "resources/vsce-icon.png",
  "licence": "Apache 2.0",
  "publisher": "Morph",
  "repository": "https://github.com/morph-labs/rift",
  "engines": {
    "vscode": "^1.71.0"
  },
  "contributors": [
    {
      "name": "Morph Labs",
      "email": "support@morph.so"
    }
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:RiftChat"
  ],
  "main": "./out/main.js",
  "contributes": {
    "keybindings": {
      "command": "rift.run_helper",
      "key": "ctrl+m",
      "when": "editorTextFocus"
    },
    "configuration": {
      "title": "Rift",
      "properties": {
        "rift.openaiKey": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "OpenAI API key"
        },
        "rift.completionsModel": {
          "type": "string",
          "default": "openai:gpt-3.5-turbo",
          "enum": [
            "gpt4all:ggml-replit-code-v1-3b",
            "openai:gpt-3.5-turbo",
            "openai:gpt-4"
          ],
          "markdownDescription": "model to use for completions. (remember to set the OpenAI API key if using an openai:* model). You can also set your own (use the JSON settings editor), the format is `{type}:{name} [@ {path}]` where `type` is one of `gpt4all`, `openai`, or `hf` (for huggingface models), `name` is the name of the model, and `path` is an optional path to the downloaded model weights."
        },
        "rift.chatModel": {
          "type": "string",
          "default": "openai:gpt-3.5-turbo",
          "enum": [
            "gpt4all:ggml-mpt-7b-chat",
            "gpt4all:ggml-gpt4all-j-v1.3-groovy",
            "openai:gpt-3.5-turbo",
            "openai:gpt-4"
          ],
          "markdownDescription": "model to use for completions. (remember to set the OpenAI API key if using an openai:* model). You can also set your own (use the JSON settings editor), the format is `{type}:{name} [@ {path}]` where `type` is one of `gpt4all`, `openai`, or `hf` (for huggingface models), `name` is the name of the model, and `path` is an optional path to the downloaded model weights."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "Rift",
          "title": "Chat",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "Rift": [
        {
          "type": "webview",
          "id": "RiftChat",
          "name": "Chat"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "RiftChat",
        "contents": "Chat with a local code model."
      }
    ],
    "commands": [
      {
        "command": "rift.run_helper",
        "title": "Rift: Code Completion"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "node ./build.mjs",
    "watch": "node ./build.mjs --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.0",
    "@types/node": "16.x",
    "@types/react": "^18.0.26",
    "@types/react-dom": "^18.0.10",
    "@types/vscode": "^1.71.0",
    "@types/websocket": "^1.0.5",
    "@typescript-eslint/eslint-plugin": "^5.38.1",
    "@typescript-eslint/parser": "^5.38.1",
    "@vscode/test-electron": "^2.1.5",
    "esbuild": "^0.16.17",
    "eslint": "^8.24.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.8.4"
  },
  "dependencies": {
    "@vscode/vsce": "^2.19.0",
    "delay": "^6.0.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "tcp-port-used": "^1.0.1",
    "vscode-languageclient": "^8.0.2"
  }
}
